/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public void flatten(TreeNode root) {
         while(root!=null){  
            if(root.left!=null){     
                TreeNode temp = root.left;    //把左侧逐个消灭，放到root的右侧
                while(temp.right!=null)  
                    temp = temp.right;  
                temp.right = root.right;  
                root.right = root.left;  
                root.left = null;  
            }  
            root = root.right;  
        }  
    }
}




/*
interviewer's solution
*/
public void flattenRecursive(TreeNode root) {
    helper(root);
}

private TreeNode helper(TreeNode root) {
    if (root == null) {
        return null;
    }
    
    TreeNode leftTail = helper(root.left);
    TreeNode rightTail = helper(root.right);
    
    if (leftTail != null) {
        leftTail.right = root.right;
        
        root.right = root.left;
        root.left = null;
    }
    
    if (leftTail == null && rightTail == null) {
        return root;
    } else if (rightTail != null) {
        return rightTail;
    } else {
        return leftTail;
    }
}
